<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25">
<Class name="SPD.Logic.Instructor">
<TimeCreated>63417,52320.419583</TimeCreated>

<Method name="CreateInstructon">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set st=$$$OK
	try
	{
		set st=##class(%ZEN.Auxiliary.jsonProvider).%ConvertJSONToObject(%request.Content,,.obj,1)
		//стандартная проверка на дублирование
		//&sql(select count(id) into :count from SPD.Instructor where IdDancer->id=:obj.IdDancer)
		//Вызвать исключение
		set instructor=##class(SPD.Instructor).%New()
		set dancer=##class(SPD.Dancer).%OpenId(obj.IdDancer)
		set school=##class(SPD.School).%OpenId(obj.IdSchool)
		set instructor.IdDancer=dancer
		set instructor.InstructorPower=20
		set instructor.OwnerSchool=school
		set st=instructor.%Save()
		set type.ShortDescription=obj.ShortDescription
	}
	Catch exception
	{
		set st=exception
	}
	q st
]]></Implementation>
</Method>

<Method name="InviteInstructor">
<ClassMethod>1</ClassMethod>
<FormalSpec>IdDancer</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set st=$$$OK
	try{
		&sql(select count(id) into :count from SPD.Dancer where id=:IdDancer)
		if (count=1)
		{
			//send invite
		}
	}
	catch{
		
	}
	ret st
]]></Implementation>
</Method>
</Class>
</Export>
