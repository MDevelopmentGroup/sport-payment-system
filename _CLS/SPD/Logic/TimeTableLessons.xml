<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25">
<Class name="SPD.Logic.TimeTableLessons">
<TimeCreated>63425,41314.047192</TimeCreated>

<Method name="Create">
<Description>
Методы доступны школе</Description>
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set st=$$$OK
	w 1
	try{
		set lesson=##class(SPD.TimeTableLessons).%New()
		set st=##class(%ZEN.Auxiliary.jsonProvider).%ConvertJSONToObject(%request.Content,,.obj,1)
		set lesson.Day=obj.DayID
		set lesson.Instructor=##class(SPD.Instructor).%OpenId(obj.InstructorID)
		set lesson.Room=##class(SPD.Room).%OpenId(obj.RoomId)
		set lesson.School=##class(Auth.Session).GetCurrentSchool()
		set lesson.ShortDescription=$ZCONVERT(obj.ShortDescription,"I","UTF8")
		set lesson.TypeLesson=##class(SPD.TypeLesson).%OpenId(obj.TypeLessonId)
		set lesson.TimeBegin=$ztimeh(obj.TimeBegin)
		set lesson.TimeEnd=$ztimeh(obj.TimeEnd)
		set st=lesson.%Save()		
		set st=##class(SPD.Logic.JournalLesson).GenerateJournalLesson(lesson.%Id())
	}
	catch ex{	set st=ex}
	ret st
]]></Implementation>
</Method>

<Method name="Update">
<ClassMethod>1</ClassMethod>
<FormalSpec>ID</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set st=$$$OK
	try{
		set lesson=##class(SPD.TimeTableLessons).%OpenId(ID)
		set st=##class(%ZEN.Auxiliary.jsonProvider).%ConvertJSONToObject(%request.Content,,.obj,1)
		set lesson.Day=obj.Day
		set lesson.Instructor=##class(SPD.Instructor).%OpenId(obj.InstructorID)
		set lesson.Room=##class(SPD.Room).%OpenId(obj.RoomId)
		set lesson.School=##class(Auth.Session).GetCurrentSchool()
		set lesson.ShortDescription=$ZCONVERT(obj.ShortDescription,"I","UTF8")
		set lesson.TypeLesson=##class(SPD.TypeLesson).%OpenId(obj.TypeLessonId)
		set lesson.TimeBegin=$ztimeh(obj.TimeBegin)
		set lesson.TimeEnd=$ztimeh(obj.TimeEnd)
		set st=lesson.%Save()		
		
		
	}
	catch ex{	set st=ex}	
	ret st
]]></Implementation>
</Method>

<Method name="Delete">
<ClassMethod>1</ClassMethod>
<FormalSpec>ID</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set st=$$$OK
	try{		
		
		
		
		
	}
	catch ex{	set st=ex}	
	ret st
]]></Implementation>
</Method>

<Method name="GetLessonsFromTable">
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set st=$$$OK
	try{		

		set SchoolQuery="select ID, Day, Instructor->id as InstructorID,Instructor->IdDancer->FirstName as InstructorName, "_
		"Room->id as RoomId, Room->Name as RoomName ,"_
		" ShortDescription, TimeBegin, TimeEnd, TypeLesson->id as TypeLessonId, "_
		"TypeLesson->name as TypeLessonTypeName "_
		"FROM SPD.TimeTableLessons where School->id="_##class(Auth.Session).GetCurrentSchool().%Id()
		//w SchoolQuery,!
		set st=##class(SPD.School).GetJSONData(SchoolQuery)	
	}
	catch ex{	set st=ex}	
	ret st
]]></Implementation>
</Method>

<Method name="GetLesson">
<Description>
методы создания, редактирования, удаления для индивидуальных занятий. Доступны инструктору(тренеру)
</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>ID</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set st=$$$OK
	try{		
		set SchoolQuery="select ID, Day, Instructor->id as InstructorID,Instructor->IdDancer->FirstName as InstructorName, "_
		"Room->id as RoomId, Room->Name as RoomName ,"_
		" ShortDescription, TimeBegin, TimeEnd, TypeLesson->id as TypeLessonId, "_
		"TypeLesson->name as TypeLessonTypeName "_
		"FROM SPD.TimeTableLessons where id="_ID
		set st=##class(SPD.School).GetJSONData(SchoolQuery)
	}
	catch ex{	set st=ex}	
	ret st
]]></Implementation>
</Method>

<Method name="UpdateLessonTable">
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set st=$$$OK
	try{
		set st=##class(%ZEN.Auxiliary.jsonProvider).%ConvertJSONToObject(%request.Content,,.obj,1)
		for i=1:1:obj.Size
		{
			set proxy=obj.Oref(i)
			set lesson=##class(SPD.TimeTableLessons).%OpenId(proxy.ID)
			set lesson.Day=proxy.Day
			set lesson.Instructor=##class(SPD.Instructor).%OpenId(proxy.InstructorID)
			set lesson.Room=##class(SPD.Room).%OpenId(proxy.RoomId)
			set lesson.School=##class(Auth.Session).GetCurrentSchool()
			set lesson.ShortDescription=$ZCONVERT(proxy.ShortDescription,"I","UTF8")
			set lesson.TypeLesson=##class(SPD.TypeLesson).%OpenId(proxy.TypeLessonId)
			set lesson.TimeBegin=$ztimeh(proxy.TimeBegin)
			set lesson.TimeEnd=$ztimeh(proxy.TimeEnd)
			set st=lesson.%Save()
			set st=##class(SPD.Logic.JournalLesson).GenerateJournalLesson(lesson.%Id())
		}
	}
	catch ex{	set st=ex}	
	ret st
]]></Implementation>
</Method>
</Class>
</Export>
