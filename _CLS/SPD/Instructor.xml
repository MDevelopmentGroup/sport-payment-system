<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25">
<Class name="SPD.Instructor">
<Super>%Persistent</Super>
<TimeCreated>63393,60295.430355</TimeCreated>

<Property name="InstructorPower">
<Type>%Integer</Type>
</Property>

<Property name="IdDancer">
<Type>SPD.Dancer</Type>
</Property>

<Property name="RefInstructor">
<Type>SPD.TempListOfInstructorsInSchools</Type>
<Cardinality>many</Cardinality>
<Inverse>Instructor</Inverse>
<Relationship>1</Relationship>
</Property>

<Method name="CreateInstructon">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	set st=$$$OK
	Try
	{
		set st=##class(%ZEN.Auxiliary.jsonProvider).%ConvertJSONToObject(%request.Content,,.obj,1)
		//стандартная проверка на дублирование
		//&sql(select count(id) into :count from SPD.Instructor where IdDancer->id=:obj.IdDancer)
		//Вызвать исключение
		set instructor=##class(SPD.Instructor).%New()
		set dancer=##class(SPD.Dancer).%OpenId(obj.IdDancer)
		set school=##class(SPD.School).%OpenId(obj.IdSchool)
		set instructor.IdDancer=dancer
		set instructor.InstructorPower=20
		set instructor.OwnerSchool=school
		set st=instructor.%Save()
		set type.ShortDescription=obj.ShortDescription
	}
	Catch exception
	{
		set st=exception
	}
	q st
]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DataLocation>^SPD.InstructorD</DataLocation>
<DefaultData>InstructorDefaultData</DefaultData>
<IdLocation>^SPD.InstructorD</IdLocation>
<IndexLocation>^SPD.InstructorI</IndexLocation>
<StreamLocation>^SPD.InstructorS</StreamLocation>
<ExtentSize>100000</ExtentSize>
<Data name="InstructorDefaultData">
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="2">
<Value>InstructorPower</Value>
</Value>
<Value name="3">
<Value>IdDancer</Value>
</Value>
<Value name="4">
<Value>OwnerSchool</Value>
</Value>
<Value name="5">
<Value>School</Value>
</Value>
</Data>
</Storage>
</Class>
</Export>
